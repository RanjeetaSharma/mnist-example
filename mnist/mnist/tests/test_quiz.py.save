from flask import Flask, request
import math
from sklearn import datasets, svm, metrics
from sklearn.model_selection import train_test_split
from joblib import dump, load
from skimage import data, color
from skimage.transform import rescale
import numpy as np
import pickle
import os
#from util import pre_processing,split_data,metric_test,run_classification_exp,load
from util import util
app = Flask(__name__)
## Loading the best SVM Model

clf = util.load('/home/ranjeeta/miniconda3/mnist-example/mnist/mnist/model/finalized_model')

## Loading the best DT Model

clf1 = util.load('/home/ranjeeta/miniconda3/mnist-example/mnist/mnist/model/finalized_model_DT')

def test_svm_model():
    gamma = 0.001
    digits = datasets.load_digits()
    n_samples = len(digits.images)
    data = digits.images.reshape((n_samples, -1))
    rescale_i
mgs = pre_processing(digits.images, 10)
    rescale_imgs = np.array(rescale_imgs)
    X_train,X_test,X_val,y_train,y_test,y_val = split_data(data, digits.target,0.3,0.1)
    #clf = svm.SVC(gamma=gamma)
    clf.fit(X_train, y_train)

def test_digit_correct_0():
    num = 25
    assert math.sqrt(num)==5
